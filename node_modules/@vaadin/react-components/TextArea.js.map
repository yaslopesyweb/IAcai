{
  "version": 3,
  "sources": ["src/TextArea.ts", "src/generated/TextArea.ts"],
  "sourcesContent": ["export * from \"@vaadin/text-area/vaadin-text-area.js\";\nexport * from './generated/TextArea.js';\n", "import type { EventName } from \"@lit/react\";\nimport { TextArea as TextAreaElement, type TextAreaEventMap as _TextAreaEventMap, } from \"@vaadin/text-area/vaadin-text-area.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TextAreaElement, };\nexport type TextAreaEventMap = Readonly<{\n    onValidated: EventName<_TextAreaEventMap[\"validated\"]>;\n    onChange: EventName<_TextAreaEventMap[\"change\"]>;\n    onInput: EventName<_TextAreaEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_TextAreaEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_TextAreaEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as TextAreaEventMap;\nexport type TextAreaProps = WebComponentProps<TextAreaElement, TextAreaEventMap>;\nexport const TextArea = createComponent({\n    elementClass: TextAreaElement, events, react: React, tagName: \"vaadin-text-area\"\n});\n"],
  "mappings": "AAAA,WAAc,wCCCd,OAAS,YAAYA,MAAoE,wCACzF,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BASxD,IAAMC,EAAS,CAAE,YAAa,YAAa,SAAU,SAAU,QAAS,QAAS,iBAAkB,kBAAmB,eAAgB,eAAgB,EAEzIC,EAAWC,EAAgB,CACpC,aAAcC,EAAiB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,kBAClE,CAAC",
  "names": ["TextAreaElement", "React", "createComponent", "events", "TextArea", "createComponent", "TextAreaElement", "React"]
}
