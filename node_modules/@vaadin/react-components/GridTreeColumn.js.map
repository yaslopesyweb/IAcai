{
  "version": 3,
  "sources": ["src/GridTreeColumn.tsx", "src/generated/GridTreeColumn.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid/vaadin-grid-tree-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridTreeColumnElement,\n  GridTreeColumn as _GridTreeColumn,\n  type GridTreeColumnProps as _GridTreeColumnProps,\n} from './generated/GridTreeColumn.js';\nimport type { GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridTreeColumn.js';\n\nexport type GridTreeColumnProps<TItem> = Partial<\n  Omit<\n    _GridTreeColumnProps<TItem>,\n    | 'children'\n    | 'footerRenderer'\n    | 'header'\n    | 'headerRenderer'\n    | 'renderer'\n    | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridTreeColumn<TItem = GridDefaultItem>(\n  { footer, header, ...props }: GridTreeColumnProps<TItem>,\n  ref: ForwardedRef<GridTreeColumnElement<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderSync: true,\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderSync: true,\n  });\n\n  return (\n    <_GridTreeColumn<TItem> {...props} headerRenderer={headerRenderer} footerRenderer={footerRenderer} ref={ref}>\n      {headerPortals}\n      {footerPortals}\n    </_GridTreeColumn>\n  );\n}\n\nconst ForwardedGridTreeColumn = forwardRef(GridTreeColumn) as <TItem = GridDefaultItem>(\n  props: GridTreeColumnProps<TItem> & RefAttributes<GridTreeColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridTreeColumn as GridTreeColumn };\n", "import type {} from \"@lit/react\";\nimport { GridTreeColumn as GridTreeColumnElement, } from \"@vaadin/grid/vaadin-grid-tree-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridTreeColumnElement, };\nexport type GridTreeColumnEventMap = Readonly<{}>;\nconst events = {} as GridTreeColumnEventMap;\nexport type GridTreeColumnProps<T1> = WebComponentProps<GridTreeColumnElement<T1>, GridTreeColumnEventMap>;\nexport const GridTreeColumn = createComponent({\n    elementClass: GridTreeColumnElement, events, react: React, tagName: \"vaadin-grid-tree-column\"\n}) as <T1>(props: GridTreeColumnProps<T1> & React.RefAttributes<GridTreeColumnElement<T1>>) => React.ReactElement | null;\n"],
  "mappings": "AAAA,WAAc,0CACd,OAGE,cAAAA,MAIK,QCPP,OAAS,kBAAkBC,MAA8B,0CACzD,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAGxD,IAAMC,EAAS,CAAC,EAEHC,EAAiBC,EAAgB,CAC1C,aAAcC,EAAuB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,yBACxE,CAAC,EDMD,OAAS,+BAAAC,MAAmC,6CAyCxC,eAAAC,MAAA,oBAZJ,SAASC,EACP,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,GAAGC,CAAM,EAC3BC,EACqB,CACrB,GAAM,CAACC,EAAeC,CAAc,EAAIR,EAA4BK,EAAM,eAAgBD,EAAQ,CAChG,WAAY,EACd,CAAC,EACK,CAACK,EAAeC,CAAc,EAAIV,EAA4BK,EAAM,eAAgBF,EAAQ,CAChG,WAAY,EACd,CAAC,EAED,OACEF,EAACC,EAAA,CAAwB,GAAGG,EAAO,eAAgBG,EAAgB,eAAgBE,EAAgB,IAAKJ,EACrG,UAAAC,EACAE,GACH,CAEJ,CAEA,IAAME,EAA0BC,EAAWV,CAAc",
  "names": ["forwardRef", "GridTreeColumnElement", "React", "createComponent", "events", "GridTreeColumn", "createComponent", "GridTreeColumnElement", "React", "useSimpleOrChildrenRenderer", "jsxs", "GridTreeColumn", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "footerPortals", "footerRenderer", "ForwardedGridTreeColumn", "forwardRef"]
}
