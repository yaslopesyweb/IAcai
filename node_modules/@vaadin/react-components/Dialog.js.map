{
  "version": 3,
  "sources": ["src/Dialog.tsx", "src/generated/Dialog.ts"],
  "sourcesContent": ["export * from \"@vaadin/dialog/vaadin-dialog.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  type HTMLAttributes,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n} from 'react';\nimport { Dialog as _Dialog, type DialogElement, type DialogProps as _DialogProps } from './generated/Dialog.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/Dialog.js';\n\nexport type DialogReactRendererProps = ReactSimpleRendererProps<DialogElement>;\n\ntype OmittedDialogHTMLAttributes = Omit<\n  HTMLAttributes<DialogElement>,\n  'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot' | 'aria-label' | 'draggable'\n>;\n\nexport type DialogProps = Partial<\n  Omit<_DialogProps, 'children' | 'footerRenderer' | 'headerRenderer' | 'renderer' | keyof OmittedDialogHTMLAttributes>\n> &\n  Readonly<{\n    children?: ReactNode | ComponentType<DialogReactRendererProps>;\n    footer?: ReactNode;\n    footerRenderer?: ComponentType<DialogReactRendererProps> | null;\n    header?: ReactNode;\n    headerRenderer?: ComponentType<DialogReactRendererProps> | null;\n    renderer?: ComponentType<DialogReactRendererProps> | null;\n  }>;\n\nfunction Dialog(\n  { children, footer, header, ...props }: DialogProps,\n  ref: ForwardedRef<DialogElement>,\n): ReactElement | null {\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer);\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header);\n  const [portals, renderer] = useSimpleOrChildrenRenderer(props.renderer, children);\n\n  return (\n    <_Dialog {...props} ref={ref} footerRenderer={footerRenderer} headerRenderer={headerRenderer} renderer={renderer}>\n      {headerPortals}\n      {footerPortals}\n      {portals}\n    </_Dialog>\n  );\n}\n\nconst ForwardedDialog = forwardRef(Dialog);\n\nexport { ForwardedDialog as Dialog };\n", "import type { EventName } from \"@lit/react\";\nimport { Dialog as DialogElement, type DialogEventMap as _DialogEventMap, } from \"@vaadin/dialog/vaadin-dialog.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DialogElement, };\nexport type DialogEventMap = Readonly<{\n    onClosed: EventName<_DialogEventMap[\"closed\"]>;\n    onResize: EventName<_DialogEventMap[\"resize\"]>;\n    onOpenedChanged: EventName<_DialogEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onClosed: \"closed\", onResize: \"resize\", onOpenedChanged: \"opened-changed\" } as DialogEventMap;\nexport type DialogProps = WebComponentProps<DialogElement, DialogEventMap>;\nexport const Dialog = createComponent({\n    elementClass: DialogElement, events, react: React, tagName: \"vaadin-dialog\"\n});\n"],
  "mappings": "AAAA,WAAc,kCACd,OAIE,cAAAA,MAGK,QCPP,OAAS,UAAUC,MAA8D,kCACjF,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAOxD,IAAMC,EAAS,CAAE,SAAU,SAAU,SAAU,SAAU,gBAAiB,gBAAiB,EAE9EC,EAASC,EAAgB,CAClC,aAAcC,EAAe,OAAAH,EAAQ,MAAOI,EAAO,QAAS,eAChE,CAAC,EDJD,OAAS,+BAAAC,MAAmC,6CAiCxC,eAAAC,MAAA,oBATJ,SAASC,EACP,CAAE,SAAAC,EAAU,OAAAC,EAAQ,OAAAC,EAAQ,GAAGC,CAAM,EACrCC,EACqB,CACrB,GAAM,CAACC,EAAeC,CAAc,EAAIT,EAA4BM,EAAM,eAAgBF,CAAM,EAC1F,CAACM,EAAeC,CAAc,EAAIX,EAA4BM,EAAM,eAAgBD,CAAM,EAC1F,CAACO,EAASC,CAAQ,EAAIb,EAA4BM,EAAM,SAAUH,CAAQ,EAEhF,OACEF,EAACC,EAAA,CAAS,GAAGI,EAAO,IAAKC,EAAK,eAAgBE,EAAgB,eAAgBE,EAAgB,SAAUE,EACrG,UAAAH,EACAF,EACAI,GACH,CAEJ,CAEA,IAAME,EAAkBC,EAAWb,CAAM",
  "names": ["forwardRef", "DialogElement", "React", "createComponent", "events", "Dialog", "createComponent", "DialogElement", "React", "useSimpleOrChildrenRenderer", "jsxs", "Dialog", "children", "footer", "header", "props", "ref", "footerPortals", "footerRenderer", "headerPortals", "headerRenderer", "portals", "renderer", "ForwardedDialog", "forwardRef"]
}
