{
  "version": 3,
  "sources": ["src/TextField.ts", "src/generated/TextField.ts"],
  "sourcesContent": ["export * from \"@vaadin/text-field/vaadin-text-field.js\";\nexport * from './generated/TextField.js';\n", "import type { EventName } from \"@lit/react\";\nimport { TextField as TextFieldElement, type TextFieldEventMap as _TextFieldEventMap, } from \"@vaadin/text-field/vaadin-text-field.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TextFieldElement, };\nexport type TextFieldEventMap = Readonly<{\n    onValidated: EventName<_TextFieldEventMap[\"validated\"]>;\n    onChange: EventName<_TextFieldEventMap[\"change\"]>;\n    onInput: EventName<_TextFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_TextFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_TextFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as TextFieldEventMap;\nexport type TextFieldProps = WebComponentProps<TextFieldElement, TextFieldEventMap>;\nexport const TextField = createComponent({\n    elementClass: TextFieldElement, events, react: React, tagName: \"vaadin-text-field\"\n});\n"],
  "mappings": "AAAA,WAAc,0CCCd,OAAS,aAAaA,MAAuE,0CAC7F,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BASxD,IAAMC,EAAS,CAAE,YAAa,YAAa,SAAU,SAAU,QAAS,QAAS,iBAAkB,kBAAmB,eAAgB,eAAgB,EAEzIC,EAAYC,EAAgB,CACrC,aAAcC,EAAkB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,mBACnE,CAAC",
  "names": ["TextFieldElement", "React", "createComponent", "events", "TextField", "createComponent", "TextFieldElement", "React"]
}
