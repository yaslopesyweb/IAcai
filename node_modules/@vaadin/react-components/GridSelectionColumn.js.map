{
  "version": 3,
  "sources": ["src/GridSelectionColumn.tsx", "src/generated/GridSelectionColumn.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid/vaadin-grid-selection-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridSelectionColumn as _GridSelectionColumn,\n  type GridSelectionColumnElement,\n  type GridSelectionColumnProps as _GridSelectionColumnProps,\n} from './generated/GridSelectionColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridSelectionColumn.js';\n\nexport type GridSelectionColumnProps<TItem> = Partial<\n  Omit<\n    _GridSelectionColumnProps<TItem>,\n    | 'children'\n    | 'footerRenderer'\n    | 'headerRenderer'\n    | 'renderer'\n    | 'header'\n    | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridSelectionColumn<TItem = GridDefaultItem>(\n  { footer, header, ...props }: GridSelectionColumnProps<TItem>,\n  ref: ForwardedRef<GridSelectionColumnElement<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderSync: true,\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderSync: true,\n  });\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? props.children, {\n    renderSync: true,\n  });\n\n  return (\n    <_GridSelectionColumn<TItem>\n      {...props}\n      footerRenderer={footerRenderer}\n      headerRenderer={headerRenderer}\n      ref={ref}\n      renderer={bodyRenderer}\n    >\n      {headerPortals}\n      {footerPortals}\n      {bodyPortals}\n    </_GridSelectionColumn>\n  );\n}\n\nconst ForwardedGridSelectionColumn = forwardRef(GridSelectionColumn) as <TItem = GridDefaultItem>(\n  props: GridSelectionColumnProps<TItem> & RefAttributes<GridSelectionColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridSelectionColumn as GridSelectionColumn };\n", "import type { EventName } from \"@lit/react\";\nimport { GridSelectionColumn as GridSelectionColumnElement, type GridSelectionColumnEventMap as _GridSelectionColumnEventMap, } from \"@vaadin/grid/vaadin-grid-selection-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridSelectionColumnElement, };\nexport type GridSelectionColumnEventMap = Readonly<{\n    onSelectAllChanged: EventName<_GridSelectionColumnEventMap[\"select-all-changed\"]>;\n}>;\nconst events = { onSelectAllChanged: \"select-all-changed\" } as GridSelectionColumnEventMap;\nexport type GridSelectionColumnProps<T1> = WebComponentProps<GridSelectionColumnElement<T1>, GridSelectionColumnEventMap>;\nexport const GridSelectionColumn = createComponent({\n    elementClass: GridSelectionColumnElement, events, react: React, tagName: \"vaadin-grid-selection-column\"\n}) as <T1>(props: GridSelectionColumnProps<T1> & React.RefAttributes<GridSelectionColumnElement<T1>>) => React.ReactElement | null;\n"],
  "mappings": "AAAA,WAAc,+CACd,OAGE,cAAAA,MAIK,QCPP,OAAS,uBAAuBC,MAAqG,+CACrI,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAKxD,IAAMC,EAAS,CAAE,mBAAoB,oBAAqB,EAE7CC,EAAsBC,EAAgB,CAC/C,aAAcC,EAA4B,OAAAH,EAAQ,MAAOI,EAAO,QAAS,8BAC7E,CAAC,EDID,OAAS,oBAAAC,MAAwB,kCACjC,OAAS,+BAAAC,MAAmC,6CA8CxC,eAAAC,MAAA,oBAfJ,SAASC,EACP,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,GAAGC,CAAM,EAC3BC,EACqB,CACrB,GAAM,CAACC,EAAeC,CAAc,EAAIR,EAA4BK,EAAM,eAAgBD,EAAQ,CAChG,WAAY,EACd,CAAC,EACK,CAACK,EAAeC,CAAc,EAAIV,EAA4BK,EAAM,eAAgBF,EAAQ,CAChG,WAAY,EACd,CAAC,EACK,CAACQ,EAAaC,CAAY,EAAIb,EAAiBM,EAAM,UAAYA,EAAM,SAAU,CACrF,WAAY,EACd,CAAC,EAED,OACEJ,EAACC,EAAA,CACE,GAAGG,EACJ,eAAgBK,EAChB,eAAgBF,EAChB,IAAKF,EACL,SAAUM,EAET,UAAAL,EACAE,EACAE,GACH,CAEJ,CAEA,IAAME,EAA+BC,EAAWZ,CAAmB",
  "names": ["forwardRef", "GridSelectionColumnElement", "React", "createComponent", "events", "GridSelectionColumn", "createComponent", "GridSelectionColumnElement", "React", "useModelRenderer", "useSimpleOrChildrenRenderer", "jsxs", "GridSelectionColumn", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "footerPortals", "footerRenderer", "bodyPortals", "bodyRenderer", "ForwardedGridSelectionColumn", "forwardRef"]
}
