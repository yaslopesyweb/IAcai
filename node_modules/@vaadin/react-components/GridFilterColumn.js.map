{
  "version": 3,
  "sources": ["src/GridFilterColumn.tsx", "src/generated/GridFilterColumn.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid/vaadin-grid-filter-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridFilterColumn as _GridFilterColumn,\n  type GridFilterColumnElement,\n  type GridFilterColumnProps as _GridFilterColumnProps,\n} from './generated/GridFilterColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridFilterColumn.js';\n\n/*\n * According to https://github.com/vaadin/web-components/issues/1485, the\n * `headerRenderer` is not allowed for `vaadin-grid-filter-column`.\n */\nexport type GridFilterColumnProps<TItem> = Partial<\n  Omit<\n    _GridFilterColumnProps<TItem>,\n    'children' | 'footerRenderer' | 'headerRenderer' | 'renderer' | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridFilterColumn<TItem = GridDefaultItem>(\n  { footer, ...props }: GridFilterColumnProps<TItem>,\n  ref: ForwardedRef<GridFilterColumnElement<TItem>>,\n): ReactElement | null {\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderSync: true,\n  });\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? props.children, {\n    renderSync: true,\n  });\n\n  return (\n    <_GridFilterColumn<TItem> {...props} footerRenderer={footerRenderer} ref={ref} renderer={bodyRenderer}>\n      {footerPortals}\n      {bodyPortals}\n    </_GridFilterColumn>\n  );\n}\n\nconst ForwardedGridFilterColumn = forwardRef(GridFilterColumn) as <TItem = GridDefaultItem>(\n  props: GridFilterColumnProps<TItem> & RefAttributes<GridFilterColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridFilterColumn as GridFilterColumn };\n", "import type {} from \"@lit/react\";\nimport { GridFilterColumn as GridFilterColumnElement, } from \"@vaadin/grid/vaadin-grid-filter-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridFilterColumnElement, };\nexport type GridFilterColumnEventMap = Readonly<{}>;\nconst events = {} as GridFilterColumnEventMap;\nexport type GridFilterColumnProps<T1> = WebComponentProps<GridFilterColumnElement<T1>, GridFilterColumnEventMap>;\nexport const GridFilterColumn = createComponent({\n    elementClass: GridFilterColumnElement, events, react: React, tagName: \"vaadin-grid-filter-column\"\n}) as <T1>(props: GridFilterColumnProps<T1> & React.RefAttributes<GridFilterColumnElement<T1>>) => React.ReactElement | null;\n"],
  "mappings": "AAAA,WAAc,4CACd,OAGE,cAAAA,MAIK,QCPP,OAAS,oBAAoBC,MAAgC,4CAC7D,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAGxD,IAAMC,EAAS,CAAC,EAEHC,EAAmBC,EAAgB,CAC5C,aAAcC,EAAyB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,2BAC1E,CAAC,EDMD,OAAS,oBAAAC,MAAwB,kCACjC,OAAS,+BAAAC,MAAmC,6CAqCxC,eAAAC,MAAA,oBAZJ,SAASC,EACP,CAAE,OAAAC,EAAQ,GAAGC,CAAM,EACnBC,EACqB,CACrB,GAAM,CAACC,EAAeC,CAAc,EAAIP,EAA4BI,EAAM,eAAgBD,EAAQ,CAChG,WAAY,EACd,CAAC,EACK,CAACK,EAAaC,CAAY,EAAIV,EAAiBK,EAAM,UAAYA,EAAM,SAAU,CACrF,WAAY,EACd,CAAC,EAED,OACEH,EAACC,EAAA,CAA0B,GAAGE,EAAO,eAAgBG,EAAgB,IAAKF,EAAK,SAAUI,EACtF,UAAAH,EACAE,GACH,CAEJ,CAEA,IAAME,EAA4BC,EAAWT,CAAgB",
  "names": ["forwardRef", "GridFilterColumnElement", "React", "createComponent", "events", "GridFilterColumn", "createComponent", "GridFilterColumnElement", "React", "useModelRenderer", "useSimpleOrChildrenRenderer", "jsxs", "GridFilterColumn", "footer", "props", "ref", "footerPortals", "footerRenderer", "bodyPortals", "bodyRenderer", "ForwardedGridFilterColumn", "forwardRef"]
}
