{
  "version": 3,
  "sources": ["src/GridColumnGroup.tsx", "src/generated/GridColumnGroup.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid/vaadin-grid-column-group.js\";\nimport {\n  forwardRef,\n  type ComponentType,\n  type ForwardedRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport {\n  GridColumnGroup as _GridColumnGroup,\n  type GridColumnGroupElement,\n  type GridColumnGroupProps as _GridColumnGroupProps,\n} from './generated/GridColumnGroup.js';\nimport { type ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridColumnGroup.js';\n\nexport type GridColumnGroupProps = Partial<\n  Omit<\n    _GridColumnGroupProps,\n    'footerRenderer' | 'header' | 'headerRenderer' | keyof OmittedGridColumnHTMLAttributes<any>\n  >\n> &\n  Readonly<{\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<ReactSimpleRendererProps<GridColumnGroupElement>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<ReactSimpleRendererProps<GridColumnGroupElement>> | null;\n  }>;\n\nfunction GridColumnGroup(\n  { children, footer, header, ...props }: GridColumnGroupProps,\n  ref: ForwardedRef<GridColumnGroupElement>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderSync: true,\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderSync: true,\n  });\n\n  return (\n    <_GridColumnGroup {...props} footerRenderer={footerRenderer} headerRenderer={headerRenderer} ref={ref}>\n      {headerPortals}\n      {footerPortals}\n      {children}\n    </_GridColumnGroup>\n  );\n}\n\nconst ForwardedGridColumnGroup = forwardRef(GridColumnGroup) as (\n  props: GridColumnGroupProps & RefAttributes<GridColumnGroupElement>,\n) => ReactElement | null;\n\nexport { ForwardedGridColumnGroup as GridColumnGroup };\n", "import type {} from \"@lit/react\";\nimport { GridColumnGroup as GridColumnGroupElement, } from \"@vaadin/grid/vaadin-grid-column-group.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridColumnGroupElement, };\nexport type GridColumnGroupEventMap = Readonly<{}>;\nconst events = {} as GridColumnGroupEventMap;\nexport type GridColumnGroupProps = WebComponentProps<GridColumnGroupElement, GridColumnGroupEventMap>;\nexport const GridColumnGroup = createComponent({\n    elementClass: GridColumnGroupElement, events, react: React, tagName: \"vaadin-grid-column-group\"\n});\n"],
  "mappings": "AAAA,WAAc,2CACd,OACE,cAAAA,MAMK,QCPP,OAAS,mBAAmBC,MAA+B,2CAC3D,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAGxD,IAAMC,EAAS,CAAC,EAEHC,EAAkBC,EAAgB,CAC3C,aAAcC,EAAwB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,0BACzE,CAAC,EDID,MAA8C,mCAC9C,OAAS,+BAAAC,MAAmC,6CAoCxC,eAAAC,MAAA,oBAZJ,SAASC,EACP,CAAE,SAAAC,EAAU,OAAAC,EAAQ,OAAAC,EAAQ,GAAGC,CAAM,EACrCC,EACqB,CACrB,GAAM,CAACC,EAAeC,CAAc,EAAIT,EAA4BM,EAAM,eAAgBD,EAAQ,CAChG,WAAY,EACd,CAAC,EACK,CAACK,EAAeC,CAAc,EAAIX,EAA4BM,EAAM,eAAgBF,EAAQ,CAChG,WAAY,EACd,CAAC,EAED,OACEH,EAACC,EAAA,CAAkB,GAAGI,EAAO,eAAgBK,EAAgB,eAAgBF,EAAgB,IAAKF,EAC/F,UAAAC,EACAE,EACAP,GACH,CAEJ,CAEA,IAAMS,EAA2BC,EAAWX,CAAe",
  "names": ["forwardRef", "GridColumnGroupElement", "React", "createComponent", "events", "GridColumnGroup", "createComponent", "GridColumnGroupElement", "React", "useSimpleOrChildrenRenderer", "jsxs", "GridColumnGroup", "children", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "footerPortals", "footerRenderer", "ForwardedGridColumnGroup", "forwardRef"]
}
