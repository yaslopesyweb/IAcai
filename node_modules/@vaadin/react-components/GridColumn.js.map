{
  "version": 3,
  "sources": ["src/GridColumn.tsx", "src/generated/GridColumn.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid/vaadin-grid-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridColumn as _GridColumn,\n  type GridColumnElement,\n  type GridColumnProps as _GridColumnProps,\n} from './generated/GridColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\n\nexport * from './generated/GridColumn.js';\n\n// Properties from HTMLAttributes that are omitted from all GridColumn types\nexport type OmittedGridColumnHTMLAttributes<TItem> = Omit<\n  React.HTMLAttributes<GridColumnElement<TItem>>,\n  'hidden' | 'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot' | 'children' | 'title'\n>;\n\nexport type GridColumnProps<TItem> = Partial<\n  Omit<\n    _GridColumnProps<TItem>,\n    | 'children'\n    | 'footerRenderer'\n    | 'header'\n    | 'headerRenderer'\n    | 'renderer'\n    | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridColumn<TItem = GridDefaultItem>(\n  { children, footer, header, ...props }: GridColumnProps<TItem>,\n  ref: ForwardedRef<GridColumnElement<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderSync: true,\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderSync: true,\n  });\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? children, {\n    renderSync: true,\n  });\n\n  return (\n    <_GridColumn<TItem>\n      {...props}\n      footerRenderer={footerRenderer}\n      headerRenderer={headerRenderer}\n      ref={ref}\n      renderer={bodyRenderer}\n    >\n      {headerPortals}\n      {footerPortals}\n      {bodyPortals}\n    </_GridColumn>\n  );\n}\n\nconst ForwardedGridColumn = forwardRef(GridColumn) as <TItem = GridDefaultItem>(\n  props: GridColumnProps<TItem> & RefAttributes<GridColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridColumn as GridColumn };\n", "import type {} from \"@lit/react\";\nimport { GridColumn as GridColumnElement, } from \"@vaadin/grid/vaadin-grid-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridColumnElement, };\nexport type GridColumnEventMap = Readonly<{}>;\nconst events = {} as GridColumnEventMap;\nexport type GridColumnProps<T1> = WebComponentProps<GridColumnElement<T1>, GridColumnEventMap>;\nexport const GridColumn = createComponent({\n    elementClass: GridColumnElement, events, react: React, tagName: \"vaadin-grid-column\"\n}) as <T1>(props: GridColumnProps<T1> & React.RefAttributes<GridColumnElement<T1>>) => React.ReactElement | null;\n"],
  "mappings": "AAAA,WAAc,qCACd,OAGE,cAAAA,MAIK,QCPP,OAAS,cAAcC,MAA0B,qCACjD,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAGxD,IAAMC,EAAS,CAAC,EAEHC,EAAaC,EAAgB,CACtC,aAAcC,EAAmB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,oBACpE,CAAC,EDMD,OAAS,oBAAAC,MAAwB,kCACjC,OAAS,+BAAAC,MAAmC,6CAmDxC,eAAAC,MAAA,oBAfJ,SAASC,EACP,CAAE,SAAAC,EAAU,OAAAC,EAAQ,OAAAC,EAAQ,GAAGC,CAAM,EACrCC,EACqB,CACrB,GAAM,CAACC,EAAeC,CAAc,EAAIT,EAA4BM,EAAM,eAAgBD,EAAQ,CAChG,WAAY,EACd,CAAC,EACK,CAACK,EAAeC,CAAc,EAAIX,EAA4BM,EAAM,eAAgBF,EAAQ,CAChG,WAAY,EACd,CAAC,EACK,CAACQ,EAAaC,CAAY,EAAId,EAAiBO,EAAM,UAAYH,EAAU,CAC/E,WAAY,EACd,CAAC,EAED,OACEF,EAACC,EAAA,CACE,GAAGI,EACJ,eAAgBK,EAChB,eAAgBF,EAChB,IAAKF,EACL,SAAUM,EAET,UAAAL,EACAE,EACAE,GACH,CAEJ,CAEA,IAAME,EAAsBC,EAAWb,CAAU",
  "names": ["forwardRef", "GridColumnElement", "React", "createComponent", "events", "GridColumn", "createComponent", "GridColumnElement", "React", "useModelRenderer", "useSimpleOrChildrenRenderer", "jsxs", "GridColumn", "children", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "footerPortals", "footerRenderer", "bodyPortals", "bodyRenderer", "ForwardedGridColumn", "forwardRef"]
}
