{
  "version": 3,
  "sources": ["src/VirtualList.tsx", "src/generated/VirtualList.ts"],
  "sourcesContent": ["export * from \"@vaadin/virtual-list/vaadin-virtual-list.js\";\nimport { type ComponentType, type ForwardedRef, forwardRef, type ReactElement, type RefAttributes } from 'react';\nimport {\n  VirtualList as _VirtualList,\n  type VirtualListDefaultItem,\n  type VirtualListElement,\n  type VirtualListItemModel,\n  type VirtualListProps as _VirtualListProps,\n} from './generated/VirtualList.js';\nimport { type ReactModelRendererProps, useModelRenderer } from './renderers/useModelRenderer.js';\n\nexport * from './generated/VirtualList.js';\n\nexport type VirtualListReactRendererProps<TItem> = ReactModelRendererProps<\n  TItem,\n  VirtualListItemModel<TItem>,\n  VirtualListElement<TItem>\n>;\n\nexport type VirtualListProps<TItem> = Partial<Omit<_VirtualListProps<TItem>, 'children' | 'renderer'>> &\n  Readonly<{\n    children?: ComponentType<VirtualListReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<VirtualListReactRendererProps<TItem>> | null;\n  }>;\n\nfunction VirtualList<TItem = VirtualListDefaultItem>(\n  props: VirtualListProps<TItem>,\n  ref: ForwardedRef<VirtualListElement<TItem>>,\n): ReactElement | null {\n  const [portals, renderer] = useModelRenderer(props.renderer ?? props.children);\n\n  return (\n    <_VirtualList<TItem> {...props} ref={ref} renderer={renderer}>\n      {portals}\n    </_VirtualList>\n  );\n}\n\nconst ForwardedVirtualList = forwardRef(VirtualList) as <TItem = VirtualListDefaultItem>(\n  props: VirtualListProps<TItem> & RefAttributes<VirtualListElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedVirtualList as VirtualList };\n", "import type {} from \"@lit/react\";\nimport { VirtualList as VirtualListElement, } from \"@vaadin/virtual-list/vaadin-virtual-list.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { VirtualListElement, };\nexport type VirtualListEventMap = Readonly<{}>;\nconst events = {} as VirtualListEventMap;\nexport type VirtualListProps<T1> = WebComponentProps<VirtualListElement<T1>, VirtualListEventMap>;\nexport const VirtualList = createComponent({\n    elementClass: VirtualListElement, events, react: React, tagName: \"vaadin-virtual-list\"\n}) as <T1>(props: VirtualListProps<T1> & React.RefAttributes<VirtualListElement<T1>>) => React.ReactElement | null;\n"],
  "mappings": "AAAA,WAAc,8CACd,OAAgD,cAAAA,MAAyD,QCAzG,OAAS,eAAeC,MAA2B,8CACnD,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAGxD,IAAMC,EAAS,CAAC,EAEHC,EAAcC,EAAgB,CACvC,aAAcC,EAAoB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,qBACrE,CAAC,EDDD,OAAuC,oBAAAC,MAAwB,kCAuB3D,cAAAC,MAAA,oBAPJ,SAASC,EACPC,EACAC,EACqB,CACrB,GAAM,CAACC,EAASC,CAAQ,EAAIN,EAAiBG,EAAM,UAAYA,EAAM,QAAQ,EAE7E,OACEF,EAACC,EAAA,CAAqB,GAAGC,EAAO,IAAKC,EAAK,SAAUE,EACjD,SAAAD,EACH,CAEJ,CAEA,IAAME,EAAuBC,EAAWN,CAAW",
  "names": ["forwardRef", "VirtualListElement", "React", "createComponent", "events", "VirtualList", "createComponent", "VirtualListElement", "React", "useModelRenderer", "jsx", "VirtualList", "props", "ref", "portals", "renderer", "ForwardedVirtualList", "forwardRef"]
}
