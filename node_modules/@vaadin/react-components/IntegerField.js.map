{
  "version": 3,
  "sources": ["src/IntegerField.ts", "src/generated/IntegerField.ts"],
  "sourcesContent": ["export * from \"@vaadin/integer-field/vaadin-integer-field.js\";\nexport * from './generated/IntegerField.js';\n", "import type { EventName } from \"@lit/react\";\nimport { IntegerField as IntegerFieldElement, type IntegerFieldEventMap as _IntegerFieldEventMap, } from \"@vaadin/integer-field/vaadin-integer-field.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { IntegerFieldElement, };\nexport type IntegerFieldEventMap = Readonly<{\n    onValidated: EventName<_IntegerFieldEventMap[\"validated\"]>;\n    onChange: EventName<_IntegerFieldEventMap[\"change\"]>;\n    onInput: EventName<_IntegerFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_IntegerFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_IntegerFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as IntegerFieldEventMap;\nexport type IntegerFieldProps = WebComponentProps<IntegerFieldElement, IntegerFieldEventMap>;\nexport const IntegerField = createComponent({\n    elementClass: IntegerFieldElement, events, react: React, tagName: \"vaadin-integer-field\"\n});\n"],
  "mappings": "AAAA,WAAc,gDCCd,OAAS,gBAAgBA,MAAgF,gDACzG,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BASxD,IAAMC,EAAS,CAAE,YAAa,YAAa,SAAU,SAAU,QAAS,QAAS,iBAAkB,kBAAmB,eAAgB,eAAgB,EAEzIC,EAAeC,EAAgB,CACxC,aAAcC,EAAqB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,sBACtE,CAAC",
  "names": ["IntegerFieldElement", "React", "createComponent", "events", "IntegerField", "createComponent", "IntegerFieldElement", "React"]
}
