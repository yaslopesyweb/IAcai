export*from"@vaadin/grid/vaadin-grid.js";import{forwardRef as l}from"react";import{Grid as d}from"@vaadin/grid/vaadin-grid.js";import*as o from"react";import{createComponent as i}from"./utils/createComponent.js";var m={onActiveItemChanged:"active-item-changed",onCellActivate:"cell-activate",onColumnResize:"column-resize",onExpandedItemsChanged:"expanded-items-changed",onLoadingChanged:"loading-changed",onSelectedItemsChanged:"selected-items-changed",onCellFocus:"cell-focus",onColumnReorder:"column-reorder",onGridDragend:"grid-dragend",onGridDragstart:"grid-dragstart",onGridDrop:"grid-drop",onSizeChanged:"size-changed",onDataProviderChanged:"data-provider-changed"},n=i({elementClass:d,events:m,react:o,tagName:"vaadin-grid"});import{useModelRenderer as p}from"./renderers/useModelRenderer.js";import{jsxs as c}from"react/jsx-runtime";function s(e,t){let[r,a]=p(e.rowDetailsRenderer,{renderSync:!0});return c(n,{...e,ref:t,rowDetailsRenderer:a,children:[e.children,r]})}var C=l(s);customElements.whenDefined("vaadin-grid").then(()=>{let e=customElements.get("vaadin-grid")?.prototype,t=e?._recalculateColumnWidths;e._recalculateColumnWidths=function(...r){queueMicrotask(()=>t.call(this,...r))}});export{C as Grid,d as GridElement};
//# sourceMappingURL=Grid.js.map
