{
  "version": 3,
  "sources": ["src/MenuBar.tsx", "src/generated/MenuBar.ts"],
  "sourcesContent": ["export * from \"@vaadin/menu-bar/vaadin-menu-bar.js\";\nimport { type ForwardedRef, forwardRef, type ReactElement } from 'react';\nimport {\n  MenuBar as _MenuBar,\n  type MenuBarElement,\n  type MenuBarProps as _MenuBarProps,\n  type MenuBarItem as _MenuBarItem,\n  type SubMenuItem as _SubMenuItem,\n} from './generated/MenuBar.js';\nimport { getOriginalItem, mapItemsWithComponents } from './utils/mapItemsWithComponents.js';\n\nexport * from './generated/MenuBar.js';\n\nexport type SubMenuItem = Omit<_SubMenuItem, 'component' | 'children'> & {\n  component?: ReactElement | string;\n\n  children?: Array<SubMenuItem>;\n};\n\nexport type MenuBarItem = Omit<_MenuBarItem, 'component' | 'children'> & {\n  component?: ReactElement | string;\n\n  children?: Array<SubMenuItem>;\n};\n\nexport type MenuBarItemSelectedEvent = CustomEvent<{ value: MenuBarItem }>;\n\nexport type MenuBarProps = Partial<Omit<_MenuBarProps, 'items' | 'onItemSelected'>> &\n  Readonly<{\n    items?: Array<MenuBarItem>;\n\n    onItemSelected?: (event: MenuBarItemSelectedEvent) => void;\n  }>;\n\nfunction MenuBar(props: MenuBarProps, ref: ForwardedRef<MenuBarElement>): ReactElement | null {\n  const [itemPortals, webComponentItems] = mapItemsWithComponents(props.items, 'vaadin-menu-bar-item');\n\n  const onItemSelected = props.onItemSelected;\n  const mappedOnItemSelected = onItemSelected\n    ? (event: CustomEvent<{ value: _MenuBarItem }>) => {\n        // Replace the mapped web component item with the original item\n        Object.assign(event.detail, {\n          value: getOriginalItem(event.detail.value),\n        });\n\n        onItemSelected(event as CustomEvent<{ value: MenuBarItem }>);\n      }\n    : undefined;\n\n  return (\n    <_MenuBar {...props} ref={ref} items={webComponentItems} onItemSelected={mappedOnItemSelected}>\n      {props.children}\n      {itemPortals}\n    </_MenuBar>\n  );\n}\n\nconst ForwardedMenuBar = forwardRef(MenuBar);\n\nexport { ForwardedMenuBar as MenuBar };\n", "import type { EventName } from \"@lit/react\";\nimport { MenuBar as MenuBarElement, type MenuBarEventMap as _MenuBarEventMap, } from \"@vaadin/menu-bar/vaadin-menu-bar.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { MenuBarElement, };\nexport type MenuBarEventMap = Readonly<{\n    onItemSelected: EventName<_MenuBarEventMap[\"item-selected\"]>;\n}>;\nconst events = { onItemSelected: \"item-selected\" } as MenuBarEventMap;\nexport type MenuBarProps = WebComponentProps<MenuBarElement, MenuBarEventMap>;\nexport const MenuBar = createComponent({\n    elementClass: MenuBarElement, events, react: React, tagName: \"vaadin-menu-bar\"\n});\n"],
  "mappings": "AAAA,WAAc,sCACd,OAA4B,cAAAA,MAAqC,QCAjE,OAAS,WAAWC,MAAiE,sCACrF,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAKxD,IAAMC,EAAS,CAAE,eAAgB,eAAgB,EAEpCC,EAAUC,EAAgB,CACnC,aAAcC,EAAgB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,iBACjE,CAAC,EDHD,OAAS,mBAAAC,EAAiB,0BAAAC,MAA8B,oCAyCpD,eAAAC,MAAA,oBAhBJ,SAASC,EAAQC,EAAqBC,EAAwD,CAC5F,GAAM,CAACC,EAAaC,CAAiB,EAAIN,EAAuBG,EAAM,MAAO,sBAAsB,EAE7FI,EAAiBJ,EAAM,eAY7B,OACEF,EAACC,EAAA,CAAU,GAAGC,EAAO,IAAKC,EAAK,MAAOE,EAAmB,eAZ9BC,EACxBC,GAAgD,CAE/C,OAAO,OAAOA,EAAM,OAAQ,CAC1B,MAAOT,EAAgBS,EAAM,OAAO,KAAK,CAC3C,CAAC,EAEDD,EAAeC,CAA4C,CAC7D,EACA,OAIC,UAAAL,EAAM,SACNE,GACH,CAEJ,CAEA,IAAMI,EAAmBC,EAAWR,CAAO",
  "names": ["forwardRef", "MenuBarElement", "React", "createComponent", "events", "MenuBar", "createComponent", "MenuBarElement", "React", "getOriginalItem", "mapItemsWithComponents", "jsxs", "MenuBar", "props", "ref", "itemPortals", "webComponentItems", "onItemSelected", "event", "ForwardedMenuBar", "forwardRef"]
}
