{
  "version": 3,
  "sources": ["../../src/resolver/resolveRoute.ts"],
  "sourcesContent": ["/**\r\n * Universal Router (https://www.kriasoft.com/universal-router/)\r\n *\r\n * Copyright (c) 2015-present Kriasoft.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.txt file in the root directory of this source tree.\r\n */\r\nimport type { ActionResult, AnyObject, MaybePromise, RouteContext } from './types.js';\r\nimport { isFunction } from './utils.js';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\r\nexport default function resolveRoute<T, R extends AnyObject, C extends AnyObject>(\r\n  context: RouteContext<T, R, C>,\r\n): MaybePromise<ActionResult<T | RouteContext<T, R, C>>> {\r\n  if (isFunction(context.route.action)) {\r\n    // @ts-expect-error: ignore \"never\" type here\r\n    return context.route.action(context);\r\n  }\r\n  return undefined;\r\n}\r\n"],
  "mappings": "AASA,SAAS,kBAAkB;AAGZ,SAAR,aACL,SACuD;AACvD,MAAI,WAAW,QAAQ,MAAM,MAAM,GAAG;AAEpC,WAAO,QAAQ,MAAM,OAAO,OAAO;AAAA,EACrC;AACA,SAAO;AACT;",
  "names": []
}
