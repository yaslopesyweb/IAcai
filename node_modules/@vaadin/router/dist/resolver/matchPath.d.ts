/**
 * Universal Router (https://www.kriasoft.com/universal-router/)
 *
 * Copyright (c) 2015-present Kriasoft.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.txt file in the root directory of this source tree.
 */
import { type Key } from 'path-to-regexp';
import type { IndexedParams } from '../types.js';
export interface RegExpExecOptArray extends ReadonlyArray<string | undefined> {
    0: string;
    index: number;
    input: string;
}
export type Match = Readonly<{
    keys: readonly Key[];
    params: IndexedParams;
    path: string;
}>;
declare function matchPath(routePath: string, path?: string[] | string, exact?: boolean, parentKeys?: readonly Key[], parentParams?: IndexedParams): Match | null;
export default matchPath;
//# sourceMappingURL=matchPath.d.ts.map