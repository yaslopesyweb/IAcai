{
  "version": 3,
  "sources": ["../../src/resolver/utils.ts"],
  "sourcesContent": ["import type { AnyObject, ChildrenCallback, Route, RouteContext } from './types.js';\r\n\r\nexport function isObject(o: unknown): o is object {\r\n  // guard against null passing the typeof check\r\n  return typeof o === 'object' && !!o;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function isFunction(f: unknown): f is Function {\r\n  return typeof f === 'function';\r\n}\r\n\r\nexport function isString(s: unknown): s is string {\r\n  return typeof s === 'string';\r\n}\r\n\r\nexport function toArray<T>(value: T | readonly T[] = []): readonly T[] {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\n\r\nexport function log(msg: string): string {\r\n  return `[Vaadin.Router] ${msg}`;\r\n}\r\n\r\nexport class NotFoundError<T, R extends AnyObject, C extends AnyObject> extends Error {\r\n  readonly code: number;\r\n  readonly context: RouteContext<T, R, C>;\r\n\r\n  constructor(context: RouteContext<T, R, C>) {\r\n    super(log(`Page not found (${context.pathname})`));\r\n    this.context = context;\r\n    this.code = 404;\r\n  }\r\n}\r\n\r\nexport const notFoundResult = Symbol('NotFoundResult');\r\nexport type NotFoundResult = typeof notFoundResult;\r\n\r\nexport function getNotFoundError<T, R extends AnyObject, C extends AnyObject>(\r\n  context: RouteContext<T, R, C>,\r\n): NotFoundError<T, R, C> {\r\n  return new NotFoundError(context);\r\n}\r\n\r\nexport function resolvePath(path?: string | readonly string[]): string {\r\n  return (Array.isArray(path) ? path[0] : path) ?? '';\r\n}\r\n\r\nexport function getRoutePath<T, R extends AnyObject, C extends AnyObject>(route: Route<T, R, C> | undefined): string {\r\n  return resolvePath(route?.path);\r\n}\r\n\r\nexport function unwrapChildren<T, R extends AnyObject, C extends AnyObject>(\r\n  children: ChildrenCallback<T, R, C> | ReadonlyArray<Route<T, R, C>> | undefined,\r\n): ReadonlyArray<Route<T, R, C>> | undefined {\r\n  return Array.isArray<ReadonlyArray<Route<T, R, C>>>(children) && children.length > 0 ? children : undefined;\r\n}\r\n"],
  "mappings": "AAEO,SAAS,SAAS,GAAyB;AAEhD,SAAO,OAAO,MAAM,YAAY,CAAC,CAAC;AACpC;AAGO,SAAS,WAAW,GAA2B;AACpD,SAAO,OAAO,MAAM;AACtB;AAEO,SAAS,SAAS,GAAyB;AAChD,SAAO,OAAO,MAAM;AACtB;AAEO,SAAS,QAAW,QAA0B,CAAC,GAAiB;AACrE,SAAO,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAC9C;AAEO,SAAS,IAAI,KAAqB;AACvC,SAAO,mBAAmB,GAAG;AAC/B;AAEO,MAAM,sBAAmE,MAAM;AAAA,EAC3E;AAAA,EACA;AAAA,EAET,YAAY,SAAgC;AAC1C,UAAM,IAAI,mBAAmB,QAAQ,QAAQ,GAAG,CAAC;AACjD,SAAK,UAAU;AACf,SAAK,OAAO;AAAA,EACd;AACF;AAEO,MAAM,iBAAiB,OAAO,gBAAgB;AAG9C,SAAS,iBACd,SACwB;AACxB,SAAO,IAAI,cAAc,OAAO;AAClC;AAEO,SAAS,YAAY,MAA2C;AACrE,UAAQ,MAAM,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,SAAS;AACnD;AAEO,SAAS,aAA0D,OAA2C;AACnH,SAAO,YAAY,OAAO,IAAI;AAChC;AAEO,SAAS,eACd,UAC2C;AAC3C,SAAO,MAAM,QAAuC,QAAQ,KAAK,SAAS,SAAS,IAAI,WAAW;AACpG;",
  "names": []
}
